---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app homepage
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:

    defaultPodOptions:
      securityContext:
        fsGroup: 1000

    controllers:
      homepage:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/gethomepage/homepage
              tag: v1.4.1
            securityContext:
              capabilities:
                drop:
                  - ALL
              allowPrivilegeEscalation: false
              runAsNonRoot: true
              runAsUser: 1000
              runAsGroup: 1000
              seccompProfile:
                type: RuntimeDefault
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                memory: 256Mi
            env:
              HOMEPAGE_ALLOWED_HOSTS: &domain homepage.${SECRET_DOMAIN}
              LOG_TARGETS: stdout
              TZ: ${TIME_ZONE}
            # envFrom:
            #   - secretRef:
            #       name: homepage-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: &port 3000
                    path: /api/healthcheck
                    httpHeaders:
                      - name: Host
                        value: *domain
                  initialDelaySeconds: 0
              readiness: *probes
              startup: *probes
        serviceAccount:
          identifier: homepage

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    ingress:
      app:
        className: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: *domain
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *domain
            secretName: homepage-tls

    persistence:
      config:
        type: configMap
        name: homepage-config
        globalMounts:
          - path: /app/config/bookmarks.yaml
            subPath: bookmarks.yaml
          - path: /app/config/custom.css
            subPath: custom.css
          - path: /app/config/custom.js
            subPath: custom.js
          - path: /app/config/docker.yaml
            subPath: docker.yaml
          - path: /app/config/kubernetes.yaml
            subPath: kubernetes.yaml
          - path: /app/config/proxmox.yaml
            subPath: proxmox.yaml
          - path: /app/config/services.yaml
            subPath: services.yaml
          - path: /app/config/settings.yaml
            subPath: settings.yaml
          - path: /app/config/widgets.yaml
            subPath: widgets.yaml

    serviceAccount:
      homepage: {}

    rbac:
      bindings:
        homepage:
          type: ClusterRoleBinding
          roleRef:
            kind: ClusterRole
            name: homepage
          subjects:
            - identifier: homepage
      roles:
        homepage:
          type: ClusterRole
          rules:
            - apiGroups:
                - ""
              resources:
                - namespaces
                - pods
                - nodes
              verbs:
                - get
                - list
            - apiGroups:
                - extensions
                - networking.k8s.io
              resources:
                - ingresses
              verbs:
                - get
                - list
            - apiGroups:
                - traefik.io
              resources:
                - ingressroutes
              verbs:
                - get
                - list
            - apiGroups:
                - gateway.networking.k8s.io
              resources:
                - httproutes
                - gateways
              verbs:
                - get
                - list
            - apiGroups:
                - metrics.k8s.io
              resources:
                - nodes
                - pods
              verbs:
                - get
                - list
