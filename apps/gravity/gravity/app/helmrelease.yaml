---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gravity
  namespace: gravity
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.1.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      gravity:
        type: statefulset
        replicas: 1
        strategy: RollingUpdate

        statefulset:
          volumeClaimTemplates:
            - name: data
              accessMode: ReadWriteOnce
              storageClass: longhorn-backup
              size: 1Gi
              globalMounts:
                - path: /data

        pod:
          # securityContext:
          #   runAsUser: 65532
          #   runAsGroup: 65532
          #   fsGroup: 65532
          #   fsGroupChangePolicy: OnRootMismatch

          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app

        containers:
          app:
            image:
              repository: ghcr.io/beryju/gravity
              tag: v0.27.1
            env:
              # - name: BOOTSTRAP_ROLES
              #   value: dns;api;monitoring
              # - name: INSTANCE_IP
              #   value: &dns_ip ${DNS_IP}
              - name: INSTANCE_LISTEN
                value: 0.0.0.0
              - name: ETCD_ENDPOINT
                value: gravity-etcd-headless:2379
              - name: DEBUG
                value: "true"
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz/live
                    port: 8009
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz/ready
                    port: 8009
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   # Error: listen unix gravity.sock: bind: read-only file system
            #   readOnlyRootFilesystem: true
            #   # ERROR: listen unix gravity.sock: bind: permission denied
            #   capabilities:
            #     drop:
            #       - ALL
            # resources:
            #   requests:
            #     cpu: 100m
            #   limits:
            #     gpu.intel.com/i915: 1
            #     memory: 9248M

    service:
      app:
        type: ClusterIP
        ports:
          http:
            port: 8008

      dns:
        type: LoadBalancer
        loadBalancerIP: ${DNS_IP}
        annotations:
          metallb.universe.tf/address-pool: main-pool
          metallb.universe.tf/allow-shared-ip: gravity
        ports: &dns_ports
          dns-tcp:
            port: 53
            protocol: TCP
          dns-udp:
            port: 53
            protocol: UDP

      dns-ipv6:
        enabled: false
        type: LoadBalancer
        loadBalancerIP: "${DNS_IPv6}"
        ports: *dns_ports

    ingress:
      app:
        className: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Gravity
          gethomepage.dev/icon: gravity
          gethomepage.dev/description: DNS with ad-blocking through Blocky
          gethomepage.dev/group: Network
        hosts:
          - host: &domain gravity.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
        tls:
          - hosts:
              - *domain
            secretName: gravity-tls

    # persistence:
    #   socket-dir:
    #     type: emptyDir
    #     advancedMounts:
    #       gravity:
    #         app:
    #           - path: /var/run
